** 10.8 PAGE1 **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: User
* Sun, Apr 13, 2014 16:38:36 
*

*## Multisim Instrument XSC1 ##*


*## Multisim Instrument XWM1 ##*
XWM1 4 1 XXWM1_204946992

*## Multisim Component e ##*
ve 4 0 dc 0 ac 1 0
+      distof1 0 0
+      distof2 0 0
+      sin(0 56.56854248 50 0 0 0)

*## Multisim Component C4 ##*
cC4 15 10 1e-006 IC=0

*## Multisim Component L4 ##*
lL4 14 15 0.001 IC=0

*## Multisim Component R4 ##*
rR4 9 14 5 vresR4 TEMP=27 
.model vresR4 r(TC1=0 TC2=0 TNOM=27)

*## Multisim Component C1 ##*
cC1 C1_OPEN_1 3 0.33 IC=0

*## Multisim Component L1 ##*
lL1 5 L1_OPEN_2 0.001 IC=0

*## Multisim Component R1 ##*
rR1 2 5 5 vresR1 TEMP=27 
.model vresR1 r(TC1=0 TC2=0 TNOM=27)

*## Multisim Component A ##*
* !!!BEGIN-INTERACT
*
*  ( External state variables )
*  1e-12  constant  low
*  : Rshunt              ++++f1 ;
*  : Mode                 ++++i3 ;
*
*  ( Internal state variables )
*  0.0      VARIABLE   r1Cur
*  0         VARIABLE   nTime
*  0         VARIABLE   nTimeCur
*
*  high  VARIABLE r1_resistance
*
*  .( Loading the ammeter.. )  cr
*
*  :  RESET
*       0.0  VALUE  SET_ANIMATION_TEXT
*       Rshunt  SET_INSTANCE Resistor ::R r1 resistance
*       1   RESET_ACDC
*       GET_LOCAL_TIME   ==>_*nTime
*  ;
*
*  :BEGIN_PLOT
*    RESET
*  ;
*
*  :OUT_DATA
*   (( GET_INSTANCE Resistor ::R r1 i  ))  1 ADD_ACDC
*   GET_LOCAL_TIME   ==>_*nTimeCur
*   *nTimeCur *nTime - 2 >= if
*   ((if Mode 1 GET_AC 1 GET_DC ))if   VALUE  SET_ANIMATION_TEXT
*   *nTimeCur  ==>_*nTime
*  endif
*  ;
*
* :  BEGIN_ANALYSIS 
*        RESET
*    ;
*     1  ACDC::ALLOC_INDEX
*
* :SIMULATION_CHANGED
*    ACDC::CIRCUIT_CHANGE
*    GET_LOCAL_TIME   ==>_*nTime
* ;
*
* !!!END-INTERACT

xA 0 12  AmmeterA

.subckt AmmeterA 1 2
R1 1 2 1e-9
.ends

*## Multisim Component V2 ##*
* !!!BEGIN-INTERACT
*
*  ( External state variables )
*  : Rshunt              ++++f1 ;
*  : Mode                 ++++i3 ;
*
*  ( Internal state variables )
*  0.0      VARIABLE   r1Volt
*  0.0      VARIABLE   r1Cur
*  0         VARIABLE   nTime
*  0         VARIABLE   nTimeCur
*
*  .( Loading the voltmeter.. )  cr
*
*  :  RESET
*       0.0  VALUE  SET_ANIMATION_TEXT
*       Rshunt  SET_INSTANCE Resistor ::R r1 resistance
*       1   RESET_ACDC
*       GET_LOCAL_TIME   ==>_*nTime
*  ;
*
*  :BEGIN_PLOT
*    RESET
*  ;
*
*  :OUT_DATA
*   GET_INSTANCE Resistor ::R r1 i  ==>_*r1Cur
*   (( Rshunt  *r1Cur  f.*  )) 1 ADD_ACDC
*   GET_LOCAL_TIME   ==>_*nTimeCur
*   *nTimeCur *nTime - 2 >= if
*   ((if Mode 1 GET_AC 1 GET_DC ))if   VALUE  SET_ANIMATION_TEXT
*   *nTimeCur   ==>_*nTime
*  endif
*  ;
*
* :  BEGIN_ANALYSIS 
*        RESET
*    ;
*     1  ACDC::ALLOC_INDEX
*
* :SIMULATION_CHANGED
*    ACDC::CIRCUIT_CHANGE
*    GET_LOCAL_TIME   ==>_*nTime
* ;
*
*
* !!!END-INTERACT

xV2 8 12  VoltmeterV2

.subckt voltmeterV2 1 2
R1 1 2 1e6
.ends

*## Multisim Component V1 ##*
* !!!BEGIN-INTERACT
*
*  ( External state variables )
*  : Rshunt              ++++f1 ;
*  : Mode                 ++++i3 ;
*
*  ( Internal state variables )
*  0.0      VARIABLE   r1Volt
*  0.0      VARIABLE   r1Cur
*  0         VARIABLE   nTime
*  0         VARIABLE   nTimeCur
*
*  .( Loading the voltmeter.. )  cr
*
*  :  RESET
*       0.0  VALUE  SET_ANIMATION_TEXT
*       Rshunt  SET_INSTANCE Resistor ::R r1 resistance
*       1   RESET_ACDC
*       GET_LOCAL_TIME   ==>_*nTime
*  ;
*
*  :BEGIN_PLOT
*    RESET
*  ;
*
*  :OUT_DATA
*   GET_INSTANCE Resistor ::R r1 i  ==>_*r1Cur
*   (( Rshunt  *r1Cur  f.*  )) 1 ADD_ACDC
*   GET_LOCAL_TIME   ==>_*nTimeCur
*   *nTimeCur *nTime - 2 >= if
*   ((if Mode 1 GET_AC 1 GET_DC ))if   VALUE  SET_ANIMATION_TEXT
*   *nTimeCur   ==>_*nTime
*  endif
*  ;
*
* :  BEGIN_ANALYSIS 
*        RESET
*    ;
*     1  ACDC::ALLOC_INDEX
*
* :SIMULATION_CHANGED
*    ACDC::CIRCUIT_CHANGE
*    GET_LOCAL_TIME   ==>_*nTime
* ;
*
*
* !!!END-INTERACT

xV1 6 12  VoltmeterV1

.subckt voltmeterV1 1 2
R1 1 2 1e6
.ends

*## Multisim Component S ##*
* !!!BEGIN-INTERACT
*   2.0      constant high
*   0.0      constant low
*  2          constant max_states
*  low       VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*  :BEGIN_ANALYSIS UPDATE_SETTINGS ; 
*
* !!!END-INTERACT

xS 10 12 9  SwitchS

.subckt SwitchS 1 2 3
V2    5 0 DC 0
R1   5 6 20
V1    6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON=1e-8 ROFF=1e30)
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON=1e30 ROFF=1e-8)
.ENDS

*## Multisim Component W ##*
* !!!BEGIN-INTERACT
*   2.0      constant high
*   0.0      constant low
*  2          constant max_states
*  low       VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*  :BEGIN_ANALYSIS UPDATE_SETTINGS ; 
*
* !!!END-INTERACT

xW W_OPEN_1 8 9  SwitchW

.subckt SwitchW 1 2 3
V2    5 0 DC 0
R1   5 6 20
V1    6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON=1e-8 ROFF=1e30)
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON=1e30 ROFF=1e-8)
.ENDS

*## Multisim Component W1 ##*
* !!!BEGIN-INTERACT
*   2.0      constant high
*   0.0      constant low
*  2          constant max_states
*  low       VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*  :BEGIN_ANALYSIS UPDATE_SETTINGS ; 
*
* !!!END-INTERACT

xW1 8 3 6  SwitchW1

.subckt SwitchW1 1 2 3
V2    5 0 DC 0
R1   5 6 20
V1    6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON=1e-8 ROFF=1e30)
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON=1e30 ROFF=1e-8)
.ENDS

*## Multisim Component C2 ##*
cC2 7 8 0.002 IC=0

*## Multisim Component R3 ##*
rR3 7 12 10 vresR3 TEMP=27 
.model vresR3 r(TC1=0 TC2=0 TNOM=27)

*## Multisim Component L3 ##*
lL3 7 12 0.032 IC=0

*## Multisim Component L2 ##*
lL2 6 7 0.005 IC=0

*## Multisim Component Z ##*
* !!!BEGIN-INTERACT
*   2.0      constant high
*   0.0      constant low
*  2          constant max_states
*  low       VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*  :BEGIN_ANALYSIS UPDATE_SETTINGS ; 
*
* !!!END-INTERACT

xZ 3 1 2  SwitchZ

.subckt SwitchZ 1 2 3
V2    5 0 DC 0
R1   5 6 20
V1    6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON=1e-8 ROFF=1e30)
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON=1e30 ROFF=1e-8)
.ENDS


.subckt XXWM1_204946992 3 4
Vamp 3 4 0 
.ends


** 10.8 PAGE2 **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: User
* Sun, Apr 13, 2014 16:38:37 
*

** 10.8 PAGE3 **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: User
* Sun, Apr 13, 2014 16:38:37 
*

